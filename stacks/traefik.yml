# simple proxy example using traefik single container
# for a more full-featured solution with multi-node proxy,
# HA, consul backend, and more, see stack-proxy-global.yml

version: '3.8'

x-default-opts:
  &default-opts
  logging:
    options:
      max-size: "1m"
  # driver: "gelf"
  # options:
  #   gelf-address: "udp://127.0.0.1:5000"

services:

  traefik:
    <<: *default-opts
    image: traefik:3.2
    networks:
      - proxy
    volumes:
      - acme:/etc/traefik/acme
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "80:80"
      - "443:443"
    command:
      # Use your favourite settings here, but add:
      - --providers.swarm.network=proxy
      - --providers.swarm.watch
      - --providers.swarm.exposedByDefault=false
      # By default a traefiek-enabled service can be accessed at
      # https://stackName.TOP_DOMAIN (where TOP_DOMAIN is specified at
      # the proxy stack's create time, or set to 'localhost' by default.
      - --providers.swarm.defaultRule=Host(`{{ index .Labels "com.docker.stack.namespace" }}.TOP_DOMAIN`)
      - --api
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.web.http.redirections.entryPoint.to=websecure # force HTTPS
      - --entrypoints.websecure.http.tls.certresolver=default
      ## optional LetsEncrypt settings
      - --certificatesResolvers.default.acme.email=TRAEFIK_ACME_EMAIL
      - --certificatesResolvers.default.acme.storage=/etc/traefik/acme/acme.json
      - --certificatesResolvers.default.acme.tlsChallenge=true
      - --certificatesResolvers.default.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      #- --certificatesResolvers.default.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
    deploy:
      placement:
        constraints: [node.role == manager]
      # Dynamic Configuration
      labels:
        traefik.enable: "true"
        traefik.http.routers.api.rule: Host(`traefik.${TOP_DOMAIN:-localhost}`)
        traefik.http.routers.api.entryPoints: websecure
        traefik.http.routers.api.service: api@internal
        traefik.http.routers.api.middlewares: auth
        traefik.http.services.dummy.loadbalancer.server.port: 4242
        # echo $(htpasswd -nB user) | sed -e s/\\$/\\$\\$/g
        # sample users/password mbt/password
        #traefik.http.middlewares.auth.basicauth.users: 'mbt:$$2y$$05$$.2DJBS04ikcwgjqmpLwFI.sSwHHETqvKDuXzmf8pMs0Nw4s0CBBZi'

volumes:
  acme:

networks:
  proxy:
    external: true
